"use strict";var ee=Object.create;var j=Object.defineProperty;var te=Object.getOwnPropertyDescriptor;var re=Object.getOwnPropertyNames;var oe=Object.getPrototypeOf,ne=Object.prototype.hasOwnProperty;var q=(e,t)=>()=>(t||e((t={exports:{}}).exports,t),t.exports);var se=(e,t,r,o)=>{if(t&&typeof t=="object"||typeof t=="function")for(let s of re(t))!ne.call(e,s)&&s!==r&&j(e,s,{get:()=>t[s],enumerable:!(o=te(t,s))||o.enumerable});return e};var N=(e,t,r)=>(r=e!=null?ee(oe(e)):{},se(t||!e||!e.__esModule?j(r,"default",{value:e,enumerable:!0}):r,e));var A=q((_e,ae)=>{ae.exports={name:"dotenv",version:"16.6.1",description:"Loads environment variables from .env file",main:"lib/main.js",types:"lib/main.d.ts",exports:{".":{types:"./lib/main.d.ts",require:"./lib/main.js",default:"./lib/main.js"},"./config":"./config.js","./config.js":"./config.js","./lib/env-options":"./lib/env-options.js","./lib/env-options.js":"./lib/env-options.js","./lib/cli-options":"./lib/cli-options.js","./lib/cli-options.js":"./lib/cli-options.js","./package.json":"./package.json"},scripts:{"dts-check":"tsc --project tests/types/tsconfig.json",lint:"standard",pretest:"npm run lint && npm run dts-check",test:"tap run --allow-empty-coverage --disable-coverage --timeout=60000","test:coverage":"tap run --show-full-coverage --timeout=60000 --coverage-report=text --coverage-report=lcov",prerelease:"npm test",release:"standard-version"},repository:{type:"git",url:"git://github.com/motdotla/dotenv.git"},homepage:"https://github.com/motdotla/dotenv#readme",funding:"https://dotenvx.com",keywords:["dotenv","env",".env","environment","variables","config","settings"],readmeFilename:"README.md",license:"BSD-2-Clause",devDependencies:{"@types/node":"^18.11.3",decache:"^4.6.2",sinon:"^14.0.1",standard:"^17.0.0","standard-version":"^9.5.0",tap:"^19.2.0",typescript:"^4.8.4"},engines:{node:">=12"},browser:{fs:!1}}});var K=q((Ne,f)=>{"use strict";var D=require("fs"),R=require("path"),ie=require("os"),ce=require("crypto"),ue=A(),I=ue.version,le=/(?:^|^)\s*(?:export\s+)?([\w.-]+)(?:\s*=\s*?|:\s+?)(\s*'(?:\\'|[^'])*'|\s*"(?:\\"|[^"])*"|\s*`(?:\\`|[^`])*`|[^#\r\n]+)?\s*(?:#.*)?(?:$|$)/mg;function de(e){let t={},r=e.toString();r=r.replace(/\r\n?/mg,`
`);let o;for(;(o=le.exec(r))!=null;){let s=o[1],n=o[2]||"";n=n.trim();let a=n[0];n=n.replace(/^(['"`])([\s\S]*)\1$/mg,"$2"),a==='"'&&(n=n.replace(/\\n/g,`
`),n=n.replace(/\\r/g,"\r")),t[s]=n}return t}function pe(e){e=e||{};let t=S(e);e.path=t;let r=c.configDotenv(e);if(!r.parsed){let a=new Error(`MISSING_DATA: Cannot parse ${t} for an unknown reason`);throw a.code="MISSING_DATA",a}let o=P(e).split(","),s=o.length,n;for(let a=0;a<s;a++)try{let i=o[a].trim(),d=me(r,i);n=c.decrypt(d.ciphertext,d.key);break}catch(i){if(a+1>=s)throw i}return c.parse(n)}function fe(e){console.log(`[dotenv@${I}][WARN] ${e}`)}function E(e){console.log(`[dotenv@${I}][DEBUG] ${e}`)}function $(e){console.log(`[dotenv@${I}] ${e}`)}function P(e){return e&&e.DOTENV_KEY&&e.DOTENV_KEY.length>0?e.DOTENV_KEY:process.env.DOTENV_KEY&&process.env.DOTENV_KEY.length>0?process.env.DOTENV_KEY:""}function me(e,t){let r;try{r=new URL(t)}catch(i){if(i.code==="ERR_INVALID_URL"){let d=new Error("INVALID_DOTENV_KEY: Wrong format. Must be in valid uri format like dotenv://:key_1234@dotenvx.com/vault/.env.vault?environment=development");throw d.code="INVALID_DOTENV_KEY",d}throw i}let o=r.password;if(!o){let i=new Error("INVALID_DOTENV_KEY: Missing key part");throw i.code="INVALID_DOTENV_KEY",i}let s=r.searchParams.get("environment");if(!s){let i=new Error("INVALID_DOTENV_KEY: Missing environment part");throw i.code="INVALID_DOTENV_KEY",i}let n=`DOTENV_VAULT_${s.toUpperCase()}`,a=e.parsed[n];if(!a){let i=new Error(`NOT_FOUND_DOTENV_ENVIRONMENT: Cannot locate environment ${n} in your .env.vault file.`);throw i.code="NOT_FOUND_DOTENV_ENVIRONMENT",i}return{ciphertext:a,key:o}}function S(e){let t=null;if(e&&e.path&&e.path.length>0)if(Array.isArray(e.path))for(let r of e.path)D.existsSync(r)&&(t=r.endsWith(".vault")?r:`${r}.vault`);else t=e.path.endsWith(".vault")?e.path:`${e.path}.vault`;else t=R.resolve(process.cwd(),".env.vault");return D.existsSync(t)?t:null}function k(e){return e[0]==="~"?R.join(ie.homedir(),e.slice(1)):e}function ve(e){let t=!!(e&&e.debug),r=e&&"quiet"in e?e.quiet:!0;(t||!r)&&$("Loading env from encrypted .env.vault");let o=c._parseVault(e),s=process.env;return e&&e.processEnv!=null&&(s=e.processEnv),c.populate(s,o,e),{parsed:o}}function ge(e){let t=R.resolve(process.cwd(),".env"),r="utf8",o=!!(e&&e.debug),s=e&&"quiet"in e?e.quiet:!0;e&&e.encoding?r=e.encoding:o&&E("No encoding is specified. UTF-8 is used by default");let n=[t];if(e&&e.path)if(!Array.isArray(e.path))n=[k(e.path)];else{n=[];for(let v of e.path)n.push(k(v))}let a,i={};for(let v of n)try{let u=c.parse(D.readFileSync(v,{encoding:r}));c.populate(i,u,e)}catch(u){o&&E(`Failed to load ${v} ${u.message}`),a=u}let d=process.env;if(e&&e.processEnv!=null&&(d=e.processEnv),c.populate(d,i,e),o||!s){let v=Object.keys(i).length,u=[];for(let T of n)try{let b=R.relative(process.cwd(),T);u.push(b)}catch(b){o&&E(`Failed to load ${T} ${b.message}`),a=b}$(`injecting env (${v}) from ${u.join(",")}`)}return a?{parsed:i,error:a}:{parsed:i}}function ye(e){if(P(e).length===0)return c.configDotenv(e);let t=S(e);return t?c._configVault(e):(fe(`You set DOTENV_KEY but you are missing a .env.vault file at ${t}. Did you forget to build it?`),c.configDotenv(e))}function he(e,t){let r=Buffer.from(t.slice(-64),"hex"),o=Buffer.from(e,"base64"),s=o.subarray(0,12),n=o.subarray(-16);o=o.subarray(12,-16);try{let a=ce.createDecipheriv("aes-256-gcm",r,s);return a.setAuthTag(n),`${a.update(o)}${a.final()}`}catch(a){let i=a instanceof RangeError,d=a.message==="Invalid key length",v=a.message==="Unsupported state or unable to authenticate data";if(i||d){let u=new Error("INVALID_DOTENV_KEY: It must be 64 characters long (or more)");throw u.code="INVALID_DOTENV_KEY",u}else if(v){let u=new Error("DECRYPTION_FAILED: Please check your DOTENV_KEY");throw u.code="DECRYPTION_FAILED",u}else throw a}}function Ee(e,t,r={}){let o=!!(r&&r.debug),s=!!(r&&r.override);if(typeof t!="object"){let n=new Error("OBJECT_REQUIRED: Please check the processEnv argument being passed to populate");throw n.code="OBJECT_REQUIRED",n}for(let n of Object.keys(t))Object.prototype.hasOwnProperty.call(e,n)?(s===!0&&(e[n]=t[n]),o&&E(s===!0?`"${n}" is already defined and WAS overwritten`:`"${n}" is already defined and was NOT overwritten`)):e[n]=t[n]}var c={configDotenv:ge,_configVault:ve,_parseVault:pe,config:ye,decrypt:he,parse:de,populate:Ee};f.exports.configDotenv=c.configDotenv;f.exports._configVault=c._configVault;f.exports._parseVault=c._parseVault;f.exports.config=c.config;f.exports.decrypt=c.decrypt;f.exports.parse=c.parse;f.exports.populate=c.populate;f.exports=c});var O=N(require("express")),z=N(K()),Z=require("http"),X=N(require("cors"));var B=require("zod"),we=function(t,r,o,s){return t instanceof B.ZodError?o.status(400).json({error:"Erro de valida\xE7\xE3o",issues:t.format()}):t.status&&t.message?o.status(t.status).json({error:t.message}):(console.error("Erro inesperado:",t),o.status(500).json({error:"Erro interno no servidor"}))},Y=we;var J=require("express");var L=require("express");var x=require("zod");var p=require("zod"),V=p.z.object({name:p.z.string().min(1,"Name is required"),description:p.z.string().optional(),price:p.z.number().positive(),category:p.z.string().min(1),favorite:p.z.boolean().optional(),imageUrl:p.z.union([p.z.string().url(),p.z.literal("")]).optional()});var F=require("@prisma/client"),y=new F.PrismaClient;var l={create:async e=>await y.product.create({data:e}),findAll:async()=>await y.product.findMany(),findById:async e=>await y.product.findUnique({where:{id:e}}),update:async(e,t)=>await y.product.update({where:{id:e},data:t}),delete:async e=>await y.product.delete({where:{id:e}}),findFavorites:async()=>await y.product.findMany({where:{favorite:!0}})};var m={create:async e=>{try{let t=V.parse(e);return await l.create(t)}catch(t){throw t instanceof x.ZodError?{status:400,message:"Erro de valida\xE7\xE3o",issues:t.issues}:t}},findAll:async()=>await l.findAll(),findById:async e=>{let t=await l.findById(e);if(!t)throw{status:404,message:"Produto n\xE3o encontrado"};return t},update:async(e,t)=>{try{let r=V.parse(t);if(!await l.findById(e))throw{status:404,message:"Produto n\xE3o encontrado"};return await l.update(e,r)}catch(r){throw r instanceof x.ZodError?{status:400,message:"Erro de valida\xE7\xE3o",issues:r.issues}:r}},delete:async e=>{if(!await l.findById(e))throw{status:404,message:"Produto n\xE3o encontrado"};return await l.delete(e)},favorite:async(e,t)=>{let r=await l.findById(e);if(!r)throw{status:404,message:"Produto n\xE3o encontrado"};let o=t??!r.favorite,s={...r,favorite:o,description:r.description??void 0,imageUrl:r.imageUrl??void 0};return await l.update(e,s)},findFavorites:async()=>await l.findFavorites()};var h={create:async(e,t,r)=>{try{console.log("=== CREATE PRODUCT REQUEST ==="),console.log("Request body:",JSON.stringify(e.body,null,2)),console.log("Request headers:",e.headers);let o=await m.create(e.body);return console.log("Product created successfully:",o),t.status(201).json(o)}catch(o){console.error("Error in create controller:",o),r(o)}},findAll:async(e,t,r)=>{try{let o=await m.findAll();return t.json(o)}catch(o){r(o)}},findById:async(e,t,r)=>{try{let o=await m.findById(Number(e.params.id));return t.json(o)}catch(o){r(o)}},update:async(e,t,r)=>{try{let o=await m.update(Number(e.params.id),e.body);return t.json(o)}catch(o){r(o)}},delete:async(e,t,r)=>{try{let o=await m.delete(Number(e.params.id));return t.status(204).send()}catch(o){r(o)}},favorite:async(e,t,r)=>{try{let o=await m.favorite(Number(e.params.id),e.body?.favorite);return t.json(o)}catch(o){r(o)}}};var g=(0,L.Router)();g.post("/new",h.create);g.get("/",h.findAll);g.get("/:id",h.findById);g.put("/:id",h.update);g.delete("/:id",h.delete);g.patch("/:id",h.favorite);g.get("/healthProducts",(e,t)=>{t.send("Health Products check is OK!")});var U=g;var M=require("express");var C={findFavorites:async(e,t)=>{let r=await m.findFavorites();return t.json(r)}};var W=(0,M.Router)();W.get("/favorites",C.findFavorites);var H=W;var _=(0,J.Router)();_.get("/",(e,t)=>{t.send("Welcome to the API!")});_.use("/products",U);_.use("/lists",H);var Q=_;z.default.config();var w=(0,O.default)(),be=(0,Z.createServer)(w);w.use((0,X.default)());w.use(O.default.json());w.use("/",Q);w.use(Y);var G=process.env.PORT||3e3;be.listen(G,()=>{console.log(`Server is running on http://localhost:${G}`)});
