var H=Object.create;var O=Object.defineProperty;var G=Object.getOwnPropertyDescriptor;var J=Object.getOwnPropertyNames;var Q=Object.getPrototypeOf,z=Object.prototype.hasOwnProperty;var R=(e=>typeof require<"u"?require:typeof Proxy<"u"?new Proxy(e,{get:(t,r)=>(typeof require<"u"?require:t)[r]}):e)(function(e){if(typeof require<"u")return require.apply(this,arguments);throw Error('Dynamic require of "'+e+'" is not supported')});var j=(e,t)=>()=>(t||e((t={exports:{}}).exports,t),t.exports);var Z=(e,t,r,o)=>{if(t&&typeof t=="object"||typeof t=="function")for(let s of J(t))!z.call(e,s)&&s!==r&&O(e,s,{get:()=>t[s],enumerable:!(o=G(t,s))||o.enumerable});return e};var X=(e,t,r)=>(r=e!=null?H(Q(e)):{},Z(t||!e||!e.__esModule?O(r,"default",{value:e,enumerable:!0}):r,e));var T=j((Ne,ee)=>{ee.exports={name:"dotenv",version:"16.6.1",description:"Loads environment variables from .env file",main:"lib/main.js",types:"lib/main.d.ts",exports:{".":{types:"./lib/main.d.ts",require:"./lib/main.js",default:"./lib/main.js"},"./config":"./config.js","./config.js":"./config.js","./lib/env-options":"./lib/env-options.js","./lib/env-options.js":"./lib/env-options.js","./lib/cli-options":"./lib/cli-options.js","./lib/cli-options.js":"./lib/cli-options.js","./package.json":"./package.json"},scripts:{"dts-check":"tsc --project tests/types/tsconfig.json",lint:"standard",pretest:"npm run lint && npm run dts-check",test:"tap run --allow-empty-coverage --disable-coverage --timeout=60000","test:coverage":"tap run --show-full-coverage --timeout=60000 --coverage-report=text --coverage-report=lcov",prerelease:"npm test",release:"standard-version"},repository:{type:"git",url:"git://github.com/motdotla/dotenv.git"},homepage:"https://github.com/motdotla/dotenv#readme",funding:"https://dotenvx.com",keywords:["dotenv","env",".env","environment","variables","config","settings"],readmeFilename:"README.md",license:"BSD-2-Clause",devDependencies:{"@types/node":"^18.11.3",decache:"^4.6.2",sinon:"^14.0.1",standard:"^17.0.0","standard-version":"^9.5.0",tap:"^19.2.0",typescript:"^4.8.4"},engines:{node:">=12"},browser:{fs:!1}}});var P=j((De,p)=>{"use strict";var D=R("fs"),_=R("path"),te=R("os"),re=R("crypto"),oe=T(),I=oe.version,ne=/(?:^|^)\s*(?:export\s+)?([\w.-]+)(?:\s*=\s*?|:\s+?)(\s*'(?:\\'|[^'])*'|\s*"(?:\\"|[^"])*"|\s*`(?:\\`|[^`])*`|[^#\r\n]+)?\s*(?:#.*)?(?:$|$)/mg;function se(e){let t={},r=e.toString();r=r.replace(/\r\n?/mg,`
`);let o;for(;(o=ne.exec(r))!=null;){let s=o[1],n=o[2]||"";n=n.trim();let a=n[0];n=n.replace(/^(['"`])([\s\S]*)\1$/mg,"$2"),a==='"'&&(n=n.replace(/\\n/g,`
`),n=n.replace(/\\r/g,"\r")),t[s]=n}return t}function ae(e){e=e||{};let t=$(e);e.path=t;let r=c.configDotenv(e);if(!r.parsed){let a=new Error(`MISSING_DATA: Cannot parse ${t} for an unknown reason`);throw a.code="MISSING_DATA",a}let o=k(e).split(","),s=o.length,n;for(let a=0;a<s;a++)try{let i=o[a].trim(),l=ce(r,i);n=c.decrypt(l.ciphertext,l.key);break}catch(i){if(a+1>=s)throw i}return c.parse(n)}function ie(e){console.log(`[dotenv@${I}][WARN] ${e}`)}function w(e){console.log(`[dotenv@${I}][DEBUG] ${e}`)}function A(e){console.log(`[dotenv@${I}] ${e}`)}function k(e){return e&&e.DOTENV_KEY&&e.DOTENV_KEY.length>0?e.DOTENV_KEY:process.env.DOTENV_KEY&&process.env.DOTENV_KEY.length>0?process.env.DOTENV_KEY:""}function ce(e,t){let r;try{r=new URL(t)}catch(i){if(i.code==="ERR_INVALID_URL"){let l=new Error("INVALID_DOTENV_KEY: Wrong format. Must be in valid uri format like dotenv://:key_1234@dotenvx.com/vault/.env.vault?environment=development");throw l.code="INVALID_DOTENV_KEY",l}throw i}let o=r.password;if(!o){let i=new Error("INVALID_DOTENV_KEY: Missing key part");throw i.code="INVALID_DOTENV_KEY",i}let s=r.searchParams.get("environment");if(!s){let i=new Error("INVALID_DOTENV_KEY: Missing environment part");throw i.code="INVALID_DOTENV_KEY",i}let n=`DOTENV_VAULT_${s.toUpperCase()}`,a=e.parsed[n];if(!a){let i=new Error(`NOT_FOUND_DOTENV_ENVIRONMENT: Cannot locate environment ${n} in your .env.vault file.`);throw i.code="NOT_FOUND_DOTENV_ENVIRONMENT",i}return{ciphertext:a,key:o}}function $(e){let t=null;if(e&&e.path&&e.path.length>0)if(Array.isArray(e.path))for(let r of e.path)D.existsSync(r)&&(t=r.endsWith(".vault")?r:`${r}.vault`);else t=e.path.endsWith(".vault")?e.path:`${e.path}.vault`;else t=_.resolve(process.cwd(),".env.vault");return D.existsSync(t)?t:null}function q(e){return e[0]==="~"?_.join(te.homedir(),e.slice(1)):e}function ue(e){let t=!!(e&&e.debug),r=e&&"quiet"in e?e.quiet:!0;(t||!r)&&A("Loading env from encrypted .env.vault");let o=c._parseVault(e),s=process.env;return e&&e.processEnv!=null&&(s=e.processEnv),c.populate(s,o,e),{parsed:o}}function de(e){let t=_.resolve(process.cwd(),".env"),r="utf8",o=!!(e&&e.debug),s=e&&"quiet"in e?e.quiet:!0;e&&e.encoding?r=e.encoding:o&&w("No encoding is specified. UTF-8 is used by default");let n=[t];if(e&&e.path)if(!Array.isArray(e.path))n=[q(e.path)];else{n=[];for(let m of e.path)n.push(q(m))}let a,i={};for(let m of n)try{let u=c.parse(D.readFileSync(m,{encoding:r}));c.populate(i,u,e)}catch(u){o&&w(`Failed to load ${m} ${u.message}`),a=u}let l=process.env;if(e&&e.processEnv!=null&&(l=e.processEnv),c.populate(l,i,e),o||!s){let m=Object.keys(i).length,u=[];for(let x of n)try{let b=_.relative(process.cwd(),x);u.push(b)}catch(b){o&&w(`Failed to load ${x} ${b.message}`),a=b}A(`injecting env (${m}) from ${u.join(",")}`)}return a?{parsed:i,error:a}:{parsed:i}}function le(e){if(k(e).length===0)return c.configDotenv(e);let t=$(e);return t?c._configVault(e):(ie(`You set DOTENV_KEY but you are missing a .env.vault file at ${t}. Did you forget to build it?`),c.configDotenv(e))}function pe(e,t){let r=Buffer.from(t.slice(-64),"hex"),o=Buffer.from(e,"base64"),s=o.subarray(0,12),n=o.subarray(-16);o=o.subarray(12,-16);try{let a=re.createDecipheriv("aes-256-gcm",r,s);return a.setAuthTag(n),`${a.update(o)}${a.final()}`}catch(a){let i=a instanceof RangeError,l=a.message==="Invalid key length",m=a.message==="Unsupported state or unable to authenticate data";if(i||l){let u=new Error("INVALID_DOTENV_KEY: It must be 64 characters long (or more)");throw u.code="INVALID_DOTENV_KEY",u}else if(m){let u=new Error("DECRYPTION_FAILED: Please check your DOTENV_KEY");throw u.code="DECRYPTION_FAILED",u}else throw a}}function fe(e,t,r={}){let o=!!(r&&r.debug),s=!!(r&&r.override);if(typeof t!="object"){let n=new Error("OBJECT_REQUIRED: Please check the processEnv argument being passed to populate");throw n.code="OBJECT_REQUIRED",n}for(let n of Object.keys(t))Object.prototype.hasOwnProperty.call(e,n)?(s===!0&&(e[n]=t[n]),o&&w(s===!0?`"${n}" is already defined and WAS overwritten`:`"${n}" is already defined and was NOT overwritten`)):e[n]=t[n]}var c={configDotenv:de,_configVault:ue,_parseVault:ae,config:le,decrypt:pe,parse:se,populate:fe};p.exports.configDotenv=c.configDotenv;p.exports._configVault=c._configVault;p.exports._parseVault=c._parseVault;p.exports.config=c.config;p.exports.decrypt=c.decrypt;p.exports.parse=c.parse;p.exports.populate=c.populate;p.exports=c});var W=X(P());import M from"express";import{createServer as Ee}from"http";import be from"cors";import{ZodError as me}from"zod";var ve=function(t,r,o,s){return t instanceof me?o.status(400).json({error:"Erro de valida\xE7\xE3o",issues:t.format()}):t.status&&t.message?o.status(t.status).json({error:t.message}):(console.error("Erro inesperado:",t),o.status(500).json({error:"Erro interno no servidor"}))},K=ve;import{Router as we}from"express";import{Router as he}from"express";import{ZodError as B}from"zod";import{z as g}from"zod";var V=g.object({name:g.string().min(1,"Name is required"),description:g.string().optional(),price:g.number().positive(),category:g.string().min(1),favorite:g.boolean().optional(),imageUrl:g.string().url().optional()});import{PrismaClient as ge}from"@prisma/client";var h=new ge;var d={create:async e=>await h.product.create({data:e}),findAll:async()=>await h.product.findMany(),findById:async e=>await h.product.findUnique({where:{id:e}}),update:async(e,t)=>await h.product.update({where:{id:e},data:t}),delete:async e=>await h.product.delete({where:{id:e}}),findFavorites:async()=>await h.product.findMany({where:{favorite:!0}})};var f={create:async e=>{try{let t=V.parse(e);return await d.create(t)}catch(t){throw t instanceof B?{status:400,message:"Erro de valida\xE7\xE3o",issues:t.issues}:t}},findAll:async()=>await d.findAll(),findById:async e=>{let t=await d.findById(e);if(!t)throw{status:404,message:"Produto n\xE3o encontrado"};return t},update:async(e,t)=>{try{let r=V.parse(t);if(!await d.findById(e))throw{status:404,message:"Produto n\xE3o encontrado"};return await d.update(e,r)}catch(r){throw r instanceof B?{status:400,message:"Erro de valida\xE7\xE3o",issues:r.issues}:r}},delete:async e=>{if(!await d.findById(e))throw{status:404,message:"Produto n\xE3o encontrado"};return await d.delete(e)},favorite:async(e,t)=>{let r=await d.findById(e);if(!r)throw{status:404,message:"Produto n\xE3o encontrado"};let o=t??!r.favorite,s={...r,favorite:o,description:r.description??void 0,imageUrl:r.imageUrl??void 0};return await d.update(e,s)},findFavorites:async()=>await d.findFavorites()};var y={create:async(e,t)=>{let r=await f.create(e.body);return t.status(201).json(r)},findAll:async(e,t)=>{let r=await f.findAll();return t.json(r)},findById:async(e,t)=>{let r=await f.findById(Number(e.params.id));return t.json(r)},update:async(e,t)=>{let r=await f.update(Number(e.params.id),e.body);return t.json(r)},delete:async(e,t)=>{let r=await f.delete(Number(e.params.id));return t.status(204).send()},favorite:async(e,t)=>{let r=await f.favorite(Number(e.params.id),e.body?.favorite);return t.json(r)}};var v=he();v.post("/new",y.create);v.get("/",y.findAll);v.get("/:id",y.findById);v.put("/:id",y.update);v.delete("/:id",y.delete);v.patch("/:id",y.favorite);v.get("/healthProducts",(e,t)=>{t.send("Health Products check is OK!")});var S=v;import{Router as ye}from"express";var Y={findFavorites:async(e,t)=>{let r=await f.findFavorites();return t.json(r)}};var F=ye();F.get("/favorites",Y.findFavorites);var L=F;var N=we();N.get("/",(e,t)=>{t.send("Welcome to the API!")});N.use("/products",S);N.use("/lists",L);var U=N;W.default.config();var E=M(),Re=Ee(E);E.use(be());E.use(M.json());E.use("/",U);E.use(K);var C=process.env.PORT||3e3;Re.listen(C,()=>{console.log(`Server is running on http://localhost:${C}`)});
